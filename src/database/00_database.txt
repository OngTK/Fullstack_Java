[ MySQL 설치 ]
    1. MySQL > Download
    2. `MySQL Installer for Windows` 설치
    3. custom > next
    4. Select Product
        [서버] MySQL server 8.xx + [DB서버관리] workbench 8.xx
    5. Type and Networking
        port 3306 / x protocol pork 33060
    6. Account and roles
        비밀번호 지정 필요 (학원PC는 1234 통일)

[ 정상 실행 여부 확인 ]
    1. MySQL Workbench 8.0 CE.exe 실행
    2. Local instance MySQL 80 클릭
    3. 비밀번호 입력
    4. 실행

==============================================================================

[ 데이터 베이스 ]
1) 정의
    자료들의 집합
2) 종류
    (1) 관계형 데이터베이스
        : table 형식               : oracle 등
    (2) NOSQL 데이터베이스
        : 객체 형식                 : mongoDB 등
3) 목적
    - 데이터를 체계적으로 관리하기 위하여
    - 데이터 중복을 최소화하고 일관성을 유지하기 위하여
    - 동시 접근 및 공유를 편리하게 하기 위해
    - 보안

[ 관계형 데이터베이스 ]
1) 정의
    - 행(가로)와 열(세로)로 이루어진 데이터의 집합
    - 테이블(표)의 교유/식별(PK) 값을 참조하여 다른 테이블 간의 종속 관계를 표현
2) 소프트웨어 종류(DBMS)
    Oracle, MySQL, MariaDB etc
3) 용어
    (1) Database, DB
        자료들의 집합
    (2) Database Administrator, DBA
        데이터베이스 관리자
    (3) Database Management System, DBMS
        데이터베이스 관리 시스템
        DBA는 DBMS를 이용하여 특정한 PC의 DB를 조작한다.
    (4) DB Server
        데이터베이스가 설치된 PC
        - Server : 제공자·자료를 제공하는 자
        - Client : 고객·자료를 제공받는 자
    (5) SQL
        데이터베이스를 조작하기 위한 언어

[ SQL ]
1) 정의
    - Structured Query Language
    - 데이터베이스에서 데이터를 추출·조작하는데 사용되는 프로그램 언어
2) 주요 SQL
    (0) 메타데이터 관리어
       ① show
           - show database;                : DB 서버 내 전체 데이터베이스 목록 조회
           - show variable like 'datadir'  : DB 서버 내 local path 조회
           - show tables;                  : DB 서버 내 활성화된 tb 목록 조회
       ② use
           - use db명;                      : DB서버 내 지정한 데이터베이스 활성화
    (1) DDL(Data Definition Language) : 정의 언어
        ① create
            - create database db명;           : DB 생성
            - create table tb명(
            속성명1 타입1 제약조건 1,
            속성명2 타입2 );                       : table 생성
        ② drop
            - drop database db명;            : DB 삭제
            - drop database if exists db명   : DB가 존재할 경우 삭제
            - drop table tb명;               : tb 삭제
            - drop database if exists tb명
    (2) DML (Data Manipulation Language) : 조작 언어
        ① insert : 생성
            레코드(테이블 내 행 단위 데이터) 삽입
            - insert into tb명(속성명1, 속성명2) values(값1, 값2);                   : 단일 레코드 삽입
            - insert into tb명(속성명1, 속성명2) values(값1-1, 값1-2),(값2-1, 값2-2); : 복수 레코드 삽입
            - 속성의 데이터 제약조건에 따라, 값 생략 가능
            - 모든 values를 입력할 경우, tb명 뒤 속성명 생략 가능
        ② select : 조회
            - select * from tb명;                    : tb의 전체속성 조회
            - select 속성1, 속성2 from tb명           : 해당 속성만 조회
            - select 속성 from tb명 where 조건;       : 조건에 따른 결과 조회
        ③ update : 수정
            - update tb명 set 속성 = new값;             :  전체 레코드의 속성값 수정 (거의 사용X)
            - update tb명 set 속성 = new값 where 조건;   : 조건에 해당하는 레코드의 속성값만 수정
            - update tb명 set 속성1 = 값1 , 속성2 = 값2; : 복수 속성 수정
        ④ delete : 삭제
            - delete from tb명               : 전체 레코드 삭제
            - delete from tb명 where 조건     : 조건에 해당하는 레코드 삭제

        ※ MySQL Workbench 「Safe mode」
        - MySQL에서 update·delete에 대하여 safe mode가 자동으로 실행되어 있음
        - update·delete를 위해서는 safe mode off가 필요함
        - safe mode on/off 방법 :
            set SQL_SAFE_UPDATES = 0 (off) / 1 (on)

    (3) DCL (Data Control Language) : 제어 언어
    (4) TCL (Transaction Control Language) : 트랜젝션 제어 언어
3) 특징
    - SQL은 대소문자를 구분하지 않음.
    - SQL 명령어는 세미클론(;) 단위로 실행됨. 따라서 문장 끝에는 반드시 세미클론(;)이 필요

4) MySQL 주석
        # 한 줄 주석
        -- 한 줄 주석
        /* 여러 줄 주석 */

[ 데이터 타입 ]
1) 정수
    tinyint       : 1 byte    -128 ~ +127
    smallint      : 2 byte    ± 3만
    mediumint     : 3 byte    ± 800만
    int           : 4 byte    ± 21억           ☆★☆★☆★
    bigint        : 8 byte    ± 21억 이상
        * 타입 unsigned : 부호가 없는 >> 음수 범위는 삭제되고 양수 범위가 2배로 증가됨
          ex. int unsigned : + 42억
2) 실수
    float         : 4 byte    소수점
    double        : 8 byte    소수점
    decimal       : 문자 타입  소수점을 문자로 처리하는 타입 → 오차가 없음   ☆★☆★☆★
3) 날짜/시간
    date          : 날짜 표현           2025-07-15
    time          : 시간 표현           10:02:30
    datetime      : 날짜·시간 표현       2025-07-15 10:02:30
4) 문자
    char(길이)     : 문자열 표현         고정 길이,  최대 255 글자
    varchar(길이)  : 문자열 표현         가변 길이,  최대 255 글자                 ☆★☆★☆★
    text          : 문자열 표현          최대 6만 자
    longtext      : 문자열 표현          최대 42억 자, 4GB 정도의 대용량 문자열
5) 논리
    bool          : 1byte               true/false

[ 제약 조건 ]
테이블 내 속성에 대한 제약 조건
목적 : 테이블 데이터에 대한 문제·결함의 원인이되는 입력을 방지하기 위하여
1) not null
    해당 속성에 null 값을 저장하지 않음
2) unique
    해당 속성에 중복값을 허용하지 않음
3) default 기본값
    값 생략시 기본값을 초기화
4) auto_increment
    (MySQL) 해당 속성에 자동으로 번호 부여하며 초기화
    PK로 선언해야지만 사용 가능
5) primary key (PK)
    기본키, 식별키, 식별 가능한·중복이 없는 고유 값
    not null, unique를 포함함
    선언 `constraint primary key( PK필드명 );
6) foreign key (FK)
    참조키, 외래키
    다른 테이블의 PK를 참조하는 키
    null·중복 가능
    선언 `contraing foreign key( FK필드명 ) references 참조table명 ( 참조PK명 );`

    ※ PK필드의 속성과 FK필드의 속성은 일치해야 함☆★☆★☆★☆★☆★☆★☆★

[ 다이어 그램 ]
여러 테이블 간의 관계를 나타내는 그림
Database > reverse enginner

[ 연산자 · 조회 키워드 ] //250717
1) 산술연산자
    + - * / div(몫) mod(나머지)
2) 비교연산자
    >초과 <미만 >=이상 <=이하 =같음 !=같지않음 !not
3) 논리 연산자
    and or
4) 기타 연사자
    - between A and B
        - A~B 값을 조회
        - A 이상 B 이하
    - in (A, B)
        = A or B
5) is null
    - 공란인 레코드
6) 문자패턴 연산자
    속성명 like '문자패턴'
    % : 와일드카드 *같은 역할, 자리수 상관 없음
    _ : 값은 모르는 자리수 1개를 의미

    ex. '김%' = '김'으로 시작하는 문자
        '%다' = '다'로 끝나는 문자
        '이_' = '이'로 시작하고, '이' 뒤에 1글자만 존재하는 문자
        '_동' = '동'으로 끝나고, '동' 앞에 1글자만 존재하는 문자

[ 조회 관련 키워드 ]
1) as 별칭
    - 조회 결과 gird에 표시될 속성명을 변경
    - 원본 tb의 속성이 변경되는 것이 아님
2) distinct
    - 중복 레코드 제거
3) order by
    - 정렬
    - order by 속성명 asc  : 오름차수 정렬
    - order by 속성명 desc : 내림차수 정렬
4) limit
    - 조회결과 레코드 수를 제한
    - limit x : 상위 x개를 조회
    - limit x, y : x번 record부터 y개를 조회 (※ record는 0부터 시작)

[ 키워드 작성 순서 ]
    select 속성명 from tb명 where 조건 order by 속성 asc/desc limit 개수;